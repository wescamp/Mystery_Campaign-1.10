#textdomain wesnoth-Mystery_Campaign

#define ENSURE_GOLD SIDE AMOUNT
    [gold]
        side={SIDE}
        amount={AMOUNT}
    [/gold]
    [store_gold]
        side={SIDE}
    [/store_gold]
    {IF_VAR gold less_than {AMOUNT} (
        [then]
            [modify_side]
                side={SIDE}
                gold={AMOUNT}
            [/modify_side]
        [/then]
    )}
    {CLEAR_VARIABLE gold}
#enddef

#define RECALL_LEADER SIDE
    {IF_VAR scenario_number not_equals 1 (
        [then]
            [store_starting_location]
                side={SIDE}
            [/store_starting_location]

            [recall]
                side={SIDE}
                canrecruit=yes
                x,y=$location.x,$location.y
            [/recall]
            {CLEAR_VARIABLE location}
        [/then]
    )}
#enddef

#ramdomly recruits some units of a particular side
#define RANDOM_RECRUITS SIDE
    [event]
        name=side {SIDE} turn

        [filter_condition]
            [have_unit]
                side={SIDE}
                canrecruit=yes
            [/have_unit]
        [/filter_condition]

        #store side recruit
        [store_side]
            side={SIDE}
            variable=stored_side_{SIDE}
        [/store_side]

        #split them into an array
        [set_variables]
            name=recruit_of_side_{SIDE}
            [split]
                list=$stored_side_{SIDE}.recruit
                separator=,
                key=type
            [/split]
        [/set_variables]

        #temporaly disallow recruit all units
        [set_recruit]
            side={SIDE}
            recruit=""
        [/set_recruit]

        # get a random recruit for the first time
        {VARIABLE_OP random_recruit_of_{SIDE} rand(1..$recruit_of_side_{SIDE}.length)}
        {VARIABLE_OP random_recruit_of_{SIDE} sub 1}

        # allow recruiting that unit
        [allow_recruit]
            side={SIDE}
            type=$recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}].type
        [/allow_recruit]
        #[inspect][/inspect]

        # store the unit recruited
        [set_variables]
            name=already_recruited_of_{SIDE}
            [value]
                type=$recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}].type
            [/value]
        [/set_variables]

        # need to know the cheapest_unit to recruit
        {FOREACH recruit_of_side_{SIDE} i}
            [unit]
                side={SIDE}
                type=$recruit_of_side_{SIDE}[$i].type
                to_variable=dummy.$i
            [/unit]
        {NEXT i}

        {VARIABLE best_index 0}
        {FOREACH recruit_of_side_{SIDE} i}
            {IF_VAR dummy.$i|.cost less_than $dummy.$best_index|.cost (
                [then]
                    {VARIABLE best_index $i}
                [/then]
            )}
            {VARIABLE recruit_of_side_{SIDE}[$i].cost $dummy.$i|.cost}
        {NEXT i}

        {VARIABLE cheapest_unit_side_{SIDE} $dummy.$best_index|.cost}
        {CLEAR_VARIABLE (best_index,dummy)}

        # everytime the sides recruits disallow the previous recruit and generate a new one
        [event]
            name=recruit
            first_time_only=no

            [filter]
                side={SIDE}
            [/filter]

            [disallow_recruit]
                side={SIDE}
                type=$recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}].type
            [/disallow_recruit]

            [store_gold]
                side={SIDE}
            [/store_gold]

            # if all units are already recruited all types are allowed again except the last recruited
            [if]
                {VARIABLE_CONDITIONAL already_recruited_of_{SIDE}.length greater_than_equal_to $recruit_of_side_{SIDE}.length}
                [then]
                    [set_variables]
                        name=already_recruited_of_{SIDE}
                        mode=replace
                        [value]
                            type=$recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}].type
                        [/value]
                    [/set_variables]
                [/then]
            [/if]

            [if]
                {VARIABLE_CONDITIONAL recruit_of_side_{SIDE}.length numerical_equals 0}
                [then]
                    [set_variables]
                        name=recruit_of_side_{SIDE}
                        mode=replace
                        [split]
                            list=$stored_side_{SIDE}.recruit
                            separator=,
                            key=type
                        [/split]
                    [/set_variables]
                [/then]
            [/if]

            {VARIABLE_OP random_recruit_of_{SIDE} rand(1..$recruit_of_side_{SIDE}.length)}
            {VARIABLE_OP random_recruit_of_{SIDE} sub 1}
            {LOOKUP_INDEX already_recruited_of_{SIDE} type $recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}].type index_of_recruit}
            #[inspect][/inspect]

            [while]
                [variable]
                    name=index_of_recruit
                    not_equals=$already_recruited_of_{SIDE}.length
                [/variable]
                [and]
                    [variable]
                        name=recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}].type
                        equals=$already_recruited_of_{SIDE}[$index_of_recruit].type
                    [/variable]
                [/and]
                [or]
                    [and]
                        [variable]
                            name=gold
                            greater_than_equal_to=$cheapest_unit_side_{SIDE}
                        [/variable]
                        [variable]
                            name=recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}].cost
                            greater_than=$gold
                        [/variable]
                    [/and]
                [/or]
                [do]
                    {IF_VAR recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}].cost greater_than $gold (
                        [then]
                            [clear_variable]
                                name=recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}]
                            [/clear_variable]
                        [/then]
                    )}

                    #repeat if previously recruited
                    {CLEAR_VARIABLE index_of_recruit}
                    {VARIABLE_OP random_recruit_of_{SIDE} rand(1..$recruit_of_side_{SIDE}.length)}
                    {VARIABLE_OP random_recruit_of_{SIDE} sub 1}
                    {LOOKUP_INDEX already_recruited_of_{SIDE} type $recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}].type index_of_recruit}
                [/do]
            [/while]

            [allow_recruit]
                side={SIDE}
                type=$recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}].type
            [/allow_recruit]

            # store the units already_recruited
            [set_variables]
                name=already_recruited_of_{SIDE}
                mode=append
                [value]
                    type=$recruit_of_side_{SIDE}[$random_recruit_of_{SIDE}].type
                [/value]
            [/set_variables]

            {CLEAR_VARIABLE (index_of_recruit,gold)}
        [/event]
    [/event]

    [event]
        name=victory,defeat,time over,enemies defeated
        {CLEAR_VARIABLE (recruit_of_side_{SIDE},already_recruited_of_{SIDE},stored_side_{SIDE},cheapest_unit_side_{SIDE},random_recruit_of_{SIDE})}
    [/event]
#enddef

#define GIVE_GENERIC_PORTRAIT SIDE
    [if]
        [variable]
            name=leader{SIDE}.race
            contains=human
        [/variable]
        #[or]
        #	[variable]
        #		name=leader{SIDE}.race
        #		contains=khalifate
        #	[/variable]
        #[/or]
        [or]
            [variable]
                name=leader{SIDE}.race
                contains=aragwaith
            [/variable]
        [/or]
        [then]
            [switch]
                variable=leader{SIDE}.gender
                [case]
                    value=female
                    [switch]
                        variable=leader{SIDE}.alignment
                        [case]
                            value=lawful
                            {VARIABLE profile{SIDE} ("portraits/human_female.png")}
                        [/case]
                        [case]
                            value=chaotic
                            {VARIABLE profile{SIDE} ("portraits/lady_outlaw.png")}
                        [/case]
                        [else]
                            {VARIABLE profile{SIDE} ("portraits/human_neutral.png")}
                        [/else]
                    [/switch]
                [/case]
                [else]
                    [switch]
                        variable=leader{SIDE}.alignment
                        [case]
                            value=lawful
                            {VARIABLE profile{SIDE} ("portraits/humans/transparent/swordsman-3.png")}
                        [/case]
                        [case]
                            value=chaotic
                            {VARIABLE profile{SIDE} ("portraits/humans/transparent/thug.png")}
                        [/case]
                        [else]
                            {VARIABLE profile{SIDE} ("portraits/human_male.png")}
                        [/else]
                    [/switch]
                [/else]
            [/switch]
        [/then]
    [/if]

    [if]
        [variable]
            name=leader{SIDE}.race
            contains=elf
        [/variable]
        [then]
            [switch]
                variable=leader{SIDE}.gender
                [case]
                    value=female
                    {VARIABLE profile{SIDE} ("portraits/elf_female.png")}
                [/case]
                [else]
                    {VARIABLE profile{SIDE} ("portraits/elf_male.png")}
                [/else]
            [/switch]
        [/then]
    [/if]

    [if]
        [variable]
            name=leader{SIDE}.race
            contains=dwarf
        [/variable]
        [then]
            {VARIABLE profile{SIDE} ("portraits/dwarf.png")}
        [/then]
    [/if]

    [if]
        [variable]
            name=leader{SIDE}.race
            contains=undead
        [/variable]
        [then]
            {VARIABLE profile{SIDE} ("portraits/undead/transparent/archer.png")}
        [/then]
    [/if]

    [if]
        [variable]
            name=leader{SIDE}.profile
            contains="units/" # in 99.9% of cases the base image
        [/variable]
        [then]
            [if]
                [variable]
                    name=profile{SIDE}
                    equals=$empty
                [/variable]
                [then]
                    {RANDOM 2..6}
                    {VARIABLE profile{SIDE} ("portraits/orcs/transparent/grunt-$random|.png")}
                    {CLEAR_VARIABLE random}
                [/then]
            [/if]
        [/then]
        [else]
            {VARIABLE profile{SIDE} $leader{SIDE}.profile}
        [/else]
    [/if]
#enddef
