#textdomain wesnoth-Mystery_Campaign

#define RANDOM_RECRUITS
    [event]
        name=side 2 turn

        [filter_condition]
            [have_unit]
                side=2
                canrecruit=yes
            [/have_unit]
        [/filter_condition]

        [store_side]
            side=2
            variable=temp
        [/store_side]

        {VARIABLE_OP side_2_recruit to_variable temp.recruit}
        {CLEAR_VARIABLE temp}

        [set_variables]
            name=stored_side_2.recruit
            [split]
                list=$side_2_recruit
                key=type
                separator=,
                remove_empty=yes
            [/split]
        [/set_variables]

        {FOREACH stored_side_2.recruit i_temp}
            [unit]
                side=2
                type=$stored_side_2.recruit[$i_temp].type
                to_variable=dummy.$i_temp
            [/unit]
        {NEXT i_temp}

        {VARIABLE best_index 0}
        {FOREACH stored_side_2.recruit i_temp}
            {VARIABLE stored_side_2.recruit[$i_temp].cost $dummy.$i_temp|.cost}
            [if]
                {VARIABLE_CONDITIONAL dummy.$i_temp|.cost less_than $dummy.$best_index|.cost}
                [then]
                    {VARIABLE best_index $i_temp}
                [/then]
            [/if]
        {NEXT i_temp}

        {VARIABLE stored_side_2.cheapest_unit $dummy.$best_index|.cost}
        {CLEAR_VARIABLE dummy,best_index}

        [set_recruit]
            side=2
            recruit=""
        [/set_recruit]

        {VARIABLE_OP random rand 1..$stored_side_2.recruit.length}
        {VARIABLE_OP random sub 1}

        [allow_recruit]
            side=2
            type=$stored_side_2.recruit[$random].type
        [/allow_recruit]

        [set_variables]
            name=stored_side_2.already_recruited
            [value]
                type=$stored_side_2.recruit[$random].type
            [/value]
        [/set_variables]

        {CLEAR_VARIABLE random}
        #[inspect][/inspect]
    [/event]

    [event]
        name=side 2 turn refresh
        first_time_only=no

        [filter_condition]
            [have_unit]
                side=2
                canrecruit=yes
            [/have_unit]
        [/filter_condition]

        [store_gold]
            side=2
        [/store_gold]

        [if]
            {VARIABLE_CONDITIONAL stored_side_2.recruit.length numerical_equals 0}
            {VARIABLE_CONDITIONAL stored_side_2.cheapest_unit less_than_equal_to $gold}
            [then]
                [set_variables]
                    name=stored_side_2.recruit
                    mode=replace
                    [split]
                        list=$side_2_recruit
                        key=type
                        separator=,
                        remove_empty=yes
                    [/split]
                [/set_variables]
            [/then]
        [/if]

        {FOREACH stored_side_2.recruit i_temp}
            [if]
                {VARIABLE_CONDITIONAL stored_side_2.recruit[$i_temp].cost greater_than $gold}
                [then]
                    {CLEAR_VARIABLE stored_side_2.recruit[$i_temp]}
                    {VARIABLE_OP i_temp sub 1}
                [/then]
            [/if]
        {NEXT i_temp}
        {CLEAR_VARIABLE gold}
    [/event]

    [event]
        name=recruit
        first_time_only=no

        [filter]
            side=2
        [/filter]

        [store_gold]
            side=2
        [/store_gold]

        [set_recruit]
            side=2
            recruit=""
        [/set_recruit]

        [if]
            {VARIABLE_CONDITIONAL stored_side_2.already_recruited.length greater_than_equal_to $stored_side_2.recruit.length}
            [then]
                {CLEAR_VARIABLE stored_side_2.already_recruited}
            [/then]
        [/if]

        {VARIABLE_OP random rand 1..$stored_side_2.recruit.length}
        {VARIABLE_OP random sub 1}

        {LOOKUP_INDEX stored_side_2.already_recruited type $stored_side_2.recruit[$random].type index}
        [while]
            {VARIABLE_CONDITIONAL index not_equals $stored_side_2.already_recruited.length}
            [and]
                {VARIABLE_CONDITIONAL stored_side_2.recruit[$random].type equals $stored_side_2.already_recruited[$index].type}
            [/and]
            [do]
                {CLEAR_VARIABLE index,random}

                {VARIABLE_OP random rand 1..$stored_side_2.recruit.length}
                {VARIABLE_OP random sub 1}

                {LOOKUP_INDEX stored_side_2.already_recruited type $stored_side_2.recruit[$random].type index}
            [/do]
        [/while]

        [set_recruit]
            side=2
            recruit=$stored_side_2.recruit[$random].type
        [/set_recruit]

        [set_variables]
            name=stored_side_2.already_recruited
            mode=append
            [value]
                type=$stored_side_2.recruit[$random].type
            [/value]
        [/set_variables]

        {CLEAR_VARIABLE gold,index,random}
        #[inspect][/inspect]
    [/event]

    [event]
        name=victory,defeat,time over,enemies defeated
        {CLEAR_VARIABLE stored_side_2,side_2_recruit}
    [/event]
#enddef

#define SURRENDER_EVENT
    [event]
        name=prestart
        {VARIABLE_OP side_2.ratio rand 2..4}
    [/event]

    [event]
        name=side 2 turn end
        first_time_only=no

        [filter_condition]
            {VARIABLE_CONDITIONAL turn_number greater_than_equal_to 3}
        [/filter_condition]

        [store_unit]
            [filter]
                side=$side_number
                {EVERYWHERE}
            [/filter]
            variable=my_units
        [/store_unit]

        [store_unit]
            [filter]
                [not]
                    side=$side_number
                [/not]
                {EVERYWHERE}
            [/filter]
            variable=enemy_units
        [/store_unit]

        [while]
            {VARIABLE_CONDITIONAL i less_than $my_units.length}
            [do]
                [unit_worth]
                    id="$my_units[$i].id"
                [/unit_worth]
                {VARIABLE_OP side_$side_number|_worth add $unit_worth}
                {VARIABLE_OP i add 1}
            [/do]
        [/while]
        {CLEAR_VARIABLE my_units,i}

        [while]
            {VARIABLE_CONDITIONAL i less_than $enemy_units.length}
            [do]
                [unit_worth]
                    id="$enemy_units[$i].id"
                [/unit_worth]
                {VARIABLE_OP enemy_of_$side_number|_worth add $unit_worth}
                {VARIABLE_OP i add 1}
            [/do]
        [/while]
        {CLEAR_VARIABLE enemy_units,i}

        [store_gold]
            side=2
        [/store_gold]

        [if]
            [variable]
                name=gold
                less_than=$stored_side_2.cheapest_unit
            [/variable]
            [and]
                [variable]
                    name=side_2.ratio
                    less_than="$($enemy_of_$side_number|_worth/$side_$side_number|_worth)"
                [/variable]
            [/and]
            [then]
                [message]
                    side=2
                    canrecruit=yes
                    message= _ "Oh, it's hopeless! I surrender!"
                [/message]
                [kill]
                    side=2
                    canrecruit=yes
                    animate=no
                    fire_event=no
                [/kill]
                {NEXT_SCENARIO}
            [/then]
        [/if]
        {CLEAR_VARIABLE gold,enemy_of_$side_number|_worth,side_$side_number|_worth,unit_worth,experience,cost,next_cost,health}
        #[inspect][/inspect]
    [/event]
#enddef

#define NEXT_SCENARIO
    {VARIABLE_OP next rand (spring,cave,fall,summer,tropical,winter,desert,swamp)}
    [while]
        [variable]
            name=next
            equals=$global.previous_scenario
        [/variable]
        [or]
            [variable]
                name=next
                equals=$global.previous_previous_scenario
            [/variable]
        [/or]
        [do]
            {VARIABLE_OP next rand (spring,cave,fall,summer,tropical,winter,desert,swamp)}
        [/do]
    [/while]
    [endlevel]
        result=victory
        next_scenario=mystery_scenario_$next
        bonus=no
        carryover_report=yes
        save=no
        replay_save=yes
        {NEW_GOLD_CARRYOVER 40}
    [/endlevel]
    {VARIABLE global.previous_previous_scenario $global.previous_scenario}
    {VARIABLE global.previous_scenario $next}
    {CLEAR_VARIABLE next}
#enddef
