#textdomain wesnoth-Mystery_Campaign

#define RANDOM_NO_MIRROR
    [event]
        name=prestart

        [store_unit]
            [filter]
                canrecruit=yes
            [/filter]
            variable=all_leaders
        [/store_unit]

        ## get all factions in game
        [set_variables]
            name=all_factions
            [value]
                {EE_FACTIONS}
            [/value]
        [/set_variables]
        {FOREACH all_factions.multiplayer_side i}
            {IF_VAR factions equals $null (
                [then]
                    {VARIABLE factions $all_factions.multiplayer_side[$i].id}
                [/then]
                [else]
                    {VARIABLE factions ($factions + "," + $all_factions.multiplayer_side[$i].id)}
                [/else]
            )}
        {NEXT i}

        ## check if some sides already have faction choosen
        {VARIABLE sides $all_leaders.length}
        {VARIABLE index "$($all_leaders.length-1)"}
        #[inspect][/inspect]
        [while]
            [variable]
                name=sides
                greater_than=0
            [/variable]
            [do]
                [store_side]
                    side=$all_leaders[$index].side
                    variable=current_side
                [/store_side]

                [if]
                    [variable]
                        name=all_leaders[$index].type
                        not_equals="EE_dummy_unit"
                    [/variable]
                    [then]
                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="Merman Fighter" #spearman is to generic
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",Loyalists")}
                            [/then]
                        [/if]

                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="Elvish Fighter"
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",Rebels")}
                            [/then]
                        [/if]

                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="Orcish Grunt"
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",Northerners")}
                            [/then]
                        [/if]

                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="Skeleton"
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",Undead")}
                            [/then]
                        [/if]

                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="Drake Fighter"
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",Drakes")}
                            [/then]
                        [/if]

                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="EE Aragwaith Swordsman"
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",aragwaithi")}
                            [/then]
                        [/if]

                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="EE Dark Elf Fighter"
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",dark_elves")}
                            [/then]
                        [/if]

                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="EE Dark Raider"
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",dark_legion")}
                            [/then]
                        [/if]

                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="EE Cavalryman"
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",frontiers")}
                            [/then]
                        [/if]

                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="Thief"
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",outlaws")}
                            [/then]
                        [/if]

                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="EE Jundi"
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",khalifate")}
                            [/then]
                        [/if]

                        [if]
                            [variable]
                                name=current_side.recruit
                                contains="Dwarvish Fighter"
                            [/variable]
                            [then]
                                {VARIABLE used_factions ($used_factions + ",dwarves")}
                            [/then]
                        [/if]
                    [/then]
                [/if]
                {VARIABLE_OP sides sub 1}
                {VARIABLE_OP index sub 1}
                {CLEAR_VARIABLE current_side}
            [/do]
        [/while]
        {CLEAR_VARIABLE index}

        ## loop througth all sides and replace the dummy units with a real leader
        {VARIABLE sides $all_leaders.length}
        [while]
            [variable]
                name=sides
                greater_than=0
            [/variable]
            [do]
                [store_unit]
                    [filter]
                        side=$sides
                    [/filter]
                    variable=leader
                [/store_unit]

                {IF_VAR leader.type equals "EE_dummy_unit" (
                    [then]
                        {VARIABLE_OP side_$sides|_faction rand($factions)}
                        [while]
                            [variable]
                                name=used_factions
                                contains=$side_$sides|_faction
                            [/variable]
                            [do]
                                {VARIABLE_OP side_$sides|_faction rand($factions)}
                            [/do]
                        [/while]
                        #[inspect][/inspect]

                        {VARIABLE index 0}
                        [while]
                            [variable]
                                name=index
                                less_than=$all_factions.multiplayer_side.length
                            [/variable]
                            [do]
                                [if]
                                    [variable]
                                        name=all_factions.multiplayer_side[$index].id
                                        equals=$side_$sides|_faction
                                    [/variable]
                                    [then]
                                        [kill]
                                            side=$sides
                                        [/kill]

                                        {IF_VAR all_factions.multiplayer_side[$index].random_leader equals $null (
                                            [then]
                                                [set_variable]
                                                    name=leader_type
                                                    rand=$all_factions.multiplayer_side[$index].leader
                                                [/set_variable]
                                            [/then]
                                            [else]
                                                [set_variable]
                                                    name=leader_type
                                                    rand=$all_factions.multiplayer_side[$index].random_leader
                                                [/set_variable]
                                            [/else]
                                        )}

                                        [unit]
                                            side=$sides
                                            id=$leader.id
                                            x,y=$leader.x,$leader.y
                                            type=$leader_type
                                            canrecruit=yes
                                            name=$leader.name
                                            random_gender=yes
                                            random_traits=no
                                        [/unit]

                                        [set_recruit]
                                            side=$sides
                                            recruit=$all_factions.multiplayer_side[$index].recruit
                                        [/set_recruit]

                                        {CLEAR_VARIABLE leader_type}
                                    [/then]
                                [/if]
                                {VARIABLE_OP index add 1}
                            [/do]
                        [/while]
                        {VARIABLE used_factions ($used_factions + "," + $side_$sides|_faction)}
                        {CLEAR_VARIABLE index,side_$sides|_faction}
                    [/then]
                )}
                {VARIABLE_OP sides sub 1}
                {CLEAR_VARIABLE leader}
            [/do]
        [/while]
        {CLEAR_VARIABLE all_factions,all_leaders,factions,sides,used_factions}
        #[inspect][/inspect]
    [/event]
#enddef

#define EE_FACTIONS
    {multiplayer/factions/loyalists-default.cfg}
    {multiplayer/factions/rebels-default.cfg}
    {multiplayer/factions/northerners-default.cfg}
    {multiplayer/factions/undead-default.cfg}
    {multiplayer/factions/drakes-default.cfg}

    [multiplayer_side]
        id=aragwaithi
        #textdomain wesnoth-Mystery_Campaign
        name= _ "Aragwaithi"
        image=units/aragwaithi/flagbearer.png
        {MAGENTA_IS_THE_TEAM_COLOR}
        type=EE Aragwaith Flagbearer
        leader=EE Aragwaith Strongbow,EE Aragwaith Flagbearer,EE Aragwaith Guard,EE Aragwaith Longswordsman,EE Aragwaith Wizard
        random_leader=EE Aragwaith Strongbow,EE Aragwaith Flagbearer,EE Aragwaith Guard,EE Aragwaith Longswordsman,EE Aragwaith Wizard
        recruit=EE Aragwaith Archer,EE Aragwaith Swordsman,EE Aragwaith Spearman,EE Aragwaith Witch,EE Aragwaith Scout,EE Aragwaith Eagle Rider
        terrain_liked=Gg, Gg, F*, Ww
        [ai]
            recruitment_pattern=""
        [/ai]
    [/multiplayer_side]

    [multiplayer_side]
        id=dark_elves
        name= _ "Dark Elves"
        image=units/dark_elves/captain.png
        {MAGENTA_IS_THE_TEAM_COLOR}
        type=EE Dark Elf Captain
        leader=EE Dark Elf Warrior,EE Dark Elf Captain,EE Dark Elf Sorceress,EE Dark Elf Lord,EE Dark Elf Sorcerer
        random_leader=EE Dark Elf Warrior,EE Dark Elf Captain,EE Dark Elf Sorceress,EE Dark Elf Lord
        recruit=EE Dark Elf Fighter,EE Dark Elf Hunter,EE Dark Elf Lizard Rider,EE Dark Elf Enchantress,EE Naga Guardian,Vampire Bat,Goblin Spearman,EE Dark Elf Wizard
        terrain_liked=U*, U*, Hh*, H*, Ds
        [ai]
            recruitment_pattern="fighter,fighter,fighter,archer,mixed fighter,mage,mixed fighter,scout"
        [/ai]
    [/multiplayer_side]

    [multiplayer_side]
        id=dark_legion
        name= _ "Dark Legion"
        image=units/dark_legion/overlord.png
        {MAGENTA_IS_THE_TEAM_COLOR}
        type=EE Chaos Knight
        leader=EE Chaos Knight,EE Chaos Magus,EE Chaos Marauder,EE Chaos Armorer,EE Dark Guardian,EE Dark Crossbowman,EE Dark Longswordsman
        random_leader=EE Chaos Knight,EE Chaos Magus,EE Chaos Marauder,EE Chaos Armorer,EE Dark Guardian,EE Dark Crossbowman,EE Dark Longswordsman
        recruit=EE Dark Raider,EE dark_legion Headhunter,EE Chaos Invader,EE Dark Spearman,EE Dark Trooper,EE Chaos Invoker,EE Lesser Daemon,EE Dark Bowman #,EE Dark Soldier
        terrain_liked=Gg, Gg, Gg, F*, Ww, G*
        [ai]
            recruitment_pattern="scout,fighter,fighter,mixed fighter,fighter,mage,mage,archer,demon,tank,scout,mixed fighter,mage"
        [/ai]
    [/multiplayer_side]

    [multiplayer_side]
        id=frontiers
        name= _ "Frontiers"
        image=units/human-loyalists/cavalryman.png
        {MAGENTA_IS_THE_TEAM_COLOR}
        type=EE Warrior
        leader=EE Warrior,EE Marauder,EE Witch,Knight,EE Bowknight
        random_leader=EE Warrior,EE Marauder,EE Witch
        recruit=EE Bowrider,EE Swordsman,EE Cavalryman,EE Cunning Woman,EE Young Bear,Horseman,Mermaid Initiate,EE Raider
        terrain_liked=Gg, Gg, F*, Ww, G*
        [ai]
            recruitment_pattern="scout,scout,scout,fighter,fighter,healer,tank,mixed fighter,scout"
        [/ai]
    [/multiplayer_side]

    [multiplayer_side]
        id=outlaws
        name= _ "Outlaws"
        image=units/human-outlaws/rogue.png
        {MAGENTA_IS_THE_TEAM_COLOR}
        type=Wesfolk Lady
        leader=Trapper,Rogue,Bandit,Outlaw,Ogre,MC_Shadow_Mage,Wesfolk Lady
        random_leader=Trapper,Rogue,Bandit,Outlaw,Ogre,MC_Shadow_Mage,Wesfolk Lady
        recruit=Thug,Thief,Poacher,Footpad,EE Naga Hunter,Young Ogre,MC_Rogue_Mage,Ruffian
        terrain_liked=G*, F*, F*, Ss*
        [ai]
            recruitment_pattern="scout,scout,fighter,fighter,fighter,archer,mage,mage,swimmer,scout"
        [/ai]
    [/multiplayer_side]

    [multiplayer_side]
        id=khalifate
        name= _ "Khalifate"
        image=units/khalifate/tineen.png
        {MAGENTA_IS_THE_TEAM_COLOR}
        type=EE Muharib
        leader=EE Muharib,EE Ghazi,EE Mudafi,EE Monawish,EE Tabib,EE_Qatif_al_nar
        random_leader=EE Muharib,EE Ghazi,EE Mudafi,EE Monawish,EE_Qatif_al_nar
        recruit=EE Falcon,EE Jundi,EE Arif,EE Rami,EE Khaiyal,EE Hakim,EE Naffat
        terrain_liked=H*,Hh,Hd,Dd,Dd,Ds,Ds,Ww
        [ai]
            recruitment_pattern=""
        [/ai]
    [/multiplayer_side]

    [multiplayer_side]
        id=dwarves
        #textdomain wesnoth-multiplayer
        name= _ "Knalgan Alliance"
        image=units/dwarves/runemaster.png
        {MAGENTA_IS_THE_TEAM_COLOR}
        type=Dwarvish Runesmith
        leader=Dwarvish Steelclad,Dwarvish Thunderguard,Dwarvish Stalwart,Dwarvish Runesmith,Dwarvish Pathfinder
        random_leader=Dwarvish Steelclad,Dwarvish Thunderguard,Dwarvish Runesmith,Dwarvish Pathfinder
        recruit=Dwarvish Fighter,Dwarvish Thunderer,Dwarvish Guardsman,Dwarvish Ulfserker,Dwarvish Scout,Gryphon Rider
        terrain_liked=H*, H*, H*, M*, G*
        [ai]
            recruitment_pattern=""
        [/ai]
    [/multiplayer_side]
#enddef

#define SLOW_QUICK_LEADERS
    [event]
        name=prestart

        [store_unit]
            [filter]
                canrecruit=yes
            [/filter]
            variable=leader
        [/store_unit]

        {FOREACH leader i}
            ## all leaders quicker than 6 movement get slow
            {IF_VAR leader[$i].max_moves greater_than 6 (
                [then]
                    [set_variables]
                        name=temp
                        [literal]
                            {TRAIT_SLOW}
                        [/literal]
                    [/set_variables]
                    [set_variables]
                        name=leader[$i].modifications.trait
                        mode=append
                        [insert_tag]
                            name=literal
                            variable=temp.trait
                        [/insert_tag]
                    [/set_variables]
                    {CLEAR_VARIABLE leader[$i].max_moves,leader[$i].moves,leader[$i].max_hitpoints,leader[$i].hitpoints}
                    [unstore_unit]
                        variable=leader[$i]
                        find_vacant=no
                    [/unstore_unit]
                [/then]
            )}
        {NEXT i}
        {CLEAR_VARIABLE leader,temp}
    [/event]
#enddef

#define NERF_LEADERSHIP_UNITS
    [event]
        name=prestart

        [store_unit]
            [filter]
                canrecruit=yes
            [/filter]
            variable=leader
        [/store_unit]

        {FOREACH leader i}
            ## loop througth all abilities
            {FOREACH leader[$i].abilities j}
                ## if an leadership type give aged trait
                {IF_VAR leader[$i].abilities[$j].leadership.id not_equals $null (
                    [then]
                        [set_variables]
                            name=temp
                            [literal]
                                {TRAIT_AGED}
                            [/literal]
                        [/set_variables]
                        [set_variables]
                            name=leader[$i].modifications.trait
                            mode=append
                            [insert_tag]
                                name=literal
                                variable=temp.trait
                            [/insert_tag]
                        [/set_variables]
                        {CLEAR_VARIABLE leader[$i].max_moves,leader[$i].moves,leader[$i].max_hitpoints,leader[$i].hitpoints}
                        ## has to be set by hand
                        {FOREACH leader[$i].attack k}
                            ## if melee sub 1 damage
                            {IF_VAR leader[$i].attack[$k].range equals melee (
                                [then]
                                    {VARIABLE_OP leader[$i].attack[$k].damage sub 1}
                                [/then]
                            )}
                        {NEXT k}
                        [unstore_unit]
                            variable=leader[$i]
                            find_vacant=no
                        [/unstore_unit]
                    [/then]
                )}
            {NEXT j}
        {NEXT i}
        {CLEAR_VARIABLE leader,temp}
    [/event]
#enddef

#define NERF_HEALING_UNITS
    [event]
        name=prestart

        [store_unit]
            [filter]
                canrecruit=yes
            [/filter]
            variable=leader
        [/store_unit]

        {FOREACH leader i}
            ## get this variable because units can have multiple healing/curing abilities
            {VARIABLE already_nerfed no}

            ## loop througth all abilities
            {FOREACH leader[$i].abilities j}
                ## check if dim is already given
                {FOREACH leader[$i].modifications.trait k}
                    {IF_VAR leader[$i].modifications.trait[$k].id equals dim (
                        [then]
                            {VARIABLE already_nerfed yes}
                        [/then]
                    )}
                {NEXT k}

                ## if have any healing ability and not already dim give that trait
                [if]
                    [and]
                        [variable]
                            name=leader[$i].abilities[$j].heals.id
                            not_equals=$null
                        [/variable]
                        [variable]
                            name=already_nerfed
                            not_equals=yes
                        [/variable]
                    [/and]
                    [then]
                        [set_variables]
                            name=temp
                            [literal]
                                {TRAIT_DIM}
                            [/literal]
                        [/set_variables]
                        [set_variables]
                            name=leader[$i].modifications.trait
                            mode=append
                            [insert_tag]
                                name=literal
                                variable=temp.trait
                            [/insert_tag]
                        [/set_variables]
                        {CLEAR_VARIABLE leader[$i].max_experience}
                        [unstore_unit]
                            variable=leader[$i]
                            find_vacant=no
                        [/unstore_unit]
                    [/then]
                [/if]
            {NEXT j}
        {NEXT i}
        {CLEAR_VARIABLE leader,temp,already_nerfed}
    [/event]
#enddef

#define NERF_UNITS_WITH_SPECIAL_ABILITIES
    [event]
        name=prestart

        [store_unit]
            [filter]
                canrecruit=yes
            [/filter]
            variable=leader
        [/store_unit]

        {FOREACH leader i}
            ## set variable
            {VARIABLE nerf_unit no}

            ## loop througth all abilities
            {FOREACH leader[$i].abilities j}
                ## if have an illuminating/skirmishing/steadfast ability
                [if]
                    [variable]
                        name=leader[$i].abilities[$j].illuminates.id
                        not_equals=$null
                    [/variable]
                    [or]
                        [variable]
                            name=leader[$i].abilities[$j].skirmisher.id
                            not_equals=$null
                        [/variable]
                    [/or]
                    [or]
                        [variable]
                            name=leader[$i].abilities[$j].resistance.id
                            not_equals=$null
                        [/variable]
                    [/or]
                    [then]
                        {VARIABLE nerf_unit yes}
                    [/then]
                [/if]
            {NEXT j}

            ## loop througth all attacks
            {FOREACH leader[$i].attack k}
                ## check all specials of that attack
                {FOREACH leader[$i].attack[$k].specials l}
                    ## if charge/counter (damage), firstrike or marksman/magical (chance to hit)
                    [if]
                        [variable]
                            name=leader[$i].attack[$k].specials[$l].damage.id
                            not_equals=$null
                        [/variable]
                        [or]
                            [variable]
                                name=leader[$i].attack[$k].specials[$l].firststrike.id
                                not_equals=$null
                            [/variable]
                        [/or]
                        [or]
                            [variable]
                                name=leader[$i].attack[$k].specials[$l].chance_to_hit.id
                                not_equals=$null
                            [/variable]
                        [/or]
                        [then]
                            {VARIABLE nerf_unit yes}
                        [/then]
                    [/if]
                {NEXT l}
            {NEXT k}

            ## if having any special above give weak trait
            {IF_VAR nerf_unit equals yes (
                [then]
                    [set_variables]
                        name=temp
                        [literal]
                            {TRAIT_WEAK}
                        [/literal]
                    [/set_variables]
                    [set_variables]
                        name=leader[$i].modifications.trait
                        mode=append
                        [insert_tag]
                            name=literal
                            variable=temp.trait
                        [/insert_tag]
                    [/set_variables]
                    {CLEAR_VARIABLE leader[$i].max_hitpoints,leader[$i].hitpoints}
                    {FOREACH leader[$i].attack m}
                        {IF_VAR leader[$i].attack[$m].range equals melee (
                            [then]
                                {VARIABLE_OP leader[$i].attack[$m].damage sub 1}
                            [/then]
                        )}
                    {NEXT m}
                    [unstore_unit]
                        variable=leader[$i]
                        find_vacant=no
                    [/unstore_unit]
                [/then]
            )}
        {NEXT i}
        {CLEAR_VARIABLE leader,temp,nerf_unit}
    [/event]
#enddef

#define RANDOM_LEADER_TRAITS
    [event]
        name=prestart

        [store_unit]
            [filter]
                canrecruit=yes
            [/filter]
            variable=leader
        [/store_unit]

        {FOREACH leader i}
            ## Wose should get fearless (buffing them)
            {IF_VAR leader[$i].type contains Wose (
                [then]
                    [set_variables]
                        name=temp
                        [literal]
                            {TRAIT_FEARLESS}
                        [/literal]
                    [/set_variables]
                    [set_variables]
                        name=leader[$i].modifications.trait
                        mode=append
                        [insert_tag]
                            name=literal
                            variable=temp.trait
                        [/insert_tag]
                    [/set_variables]
                    [unstore_unit]
                        variable=leader[$i]
                        find_vacant=no
                    [/unstore_unit]
                [/then]
                [else]
                    ## check if the unit has any ranged attack
                    {FOREACH leader[$i].attack x}
                        {IF_VAR leader[$i].attack[$x].range equals ranged (
                            [then]
                                {VARIABLE have_ranged yes}
                            [/then]
                        )}
                    {NEXT x}

                    ## if not already two traits are assigted
                    [while]
                        [variable]
                            name=leader[$i].modifications.trait.length
                            less_than=2
                        [/variable]
                        [do]
                            ## pick up one trait
                            {VARIABLE_OP random_traits rand(strong,resilient,healthy,dextrous,intelligent)}
                            ## repeat if duplicated or odd combination
                            [while]
                                ## already given
                                [variable]
                                    name=random_traits
                                    equals=$leader[$i].modifications.trait[0].id
                                [/variable]
                                [or]
                                    ## strong and weak are a no-go
                                    [and]
                                        [variable]
                                            name=random_traits
                                            equals=strong
                                        [/variable]
                                        [variable]
                                            name=leader[$i].modifications.trait[0].id
                                            equals=weak
                                        [/variable]
                                    [/and]
                                [/or]
                                [or]
                                    ## intelligent and dim to
                                    [and]
                                        [variable]
                                            name=random_traits
                                            equals=intelligent
                                        [/variable]
                                        [variable]
                                            name=leader[$i].modifications.trait[0].id
                                            equals=dim
                                        [/variable]
                                    [/and]
                                [/or]
                                [or]
                                    ## only give dextrous to ranged units
                                    [and]
                                        [variable]
                                            name=random_traits
                                            equals=dextrous
                                        [/variable]
                                        [variable]
                                            name=have_ranged
                                            not_equals=yes
                                        [/variable]
                                    [/and]
                                [/or]
                                [or]
                                    ## dont give intelligent to trolls
                                    [and]
                                        [variable]
                                            name=random_traits
                                            equals=intelligent
                                        [/variable]
                                        [variable]
                                            name=leader[$i].type
                                            contains=Troll
                                        [/variable]
                                    [/and]
                                [/or]
                                [do]
                                    {VARIABLE_OP random_traits rand(strong,resilient,healthy,dextrous,intelligent)}
                                [/do]
                            [/while]

                            ## assign the the traits
                            [switch]
                                variable=random_traits
                                [case]
                                    value=strong
                                    [set_variables]
                                        name=temp
                                        [literal]
                                            {TRAIT_STRONG}
                                        [/literal]
                                    [/set_variables]
                                    [set_variables]
                                        name=leader[$i].modifications.trait
                                        mode=append
                                        [insert_tag]
                                            name=literal
                                            variable=temp.trait
                                        [/insert_tag]
                                    [/set_variables]
                                    {CLEAR_VARIABLE leader[$i].hitpoints,leader[$i].max_hitpoints}
                                    {FOREACH leader[$i].attack j}
                                        {IF_VAR leader[$i].attack[$j].range equals melee (
                                            [then]
                                                {VARIABLE_OP leader[$i].attack[$j].damage add 1}
                                            [/then]
                                        )}
                                    {NEXT j}
                                [/case]
                                [case]
                                    value=resilient
                                    [set_variables]
                                        name=temp
                                        [literal]
                                            {TRAIT_RESILIENT}
                                        [/literal]
                                    [/set_variables]
                                    [set_variables]
                                        name=leader[$i].modifications.trait
                                        mode=append
                                        [insert_tag]
                                            name=literal
                                            variable=temp.trait
                                        [/insert_tag]
                                    [/set_variables]
                                    {CLEAR_VARIABLE leader[$i].hitpoints,leader[$i].max_hitpoints}
                                [/case]
                                [case]
                                    value=healthy
                                    [set_variables]
                                        name=temp
                                        [literal]
                                            {TRAIT_HEALTHY}
                                        [/literal]
                                    [/set_variables]
                                    [set_variables]
                                        name=leader[$i].modifications.trait
                                        mode=append
                                        [insert_tag]
                                            name=literal
                                            variable=temp.trait
                                        [/insert_tag]
                                    [/set_variables]
                                    {CLEAR_VARIABLE leader[$i].hitpoints,leader[$i].max_hitpoints}
                                [/case]
                                [case]
                                    value=dextrous
                                    [set_variables]
                                        name=temp
                                        [literal]
                                            {TRAIT_DEXTROUS}
                                        [/literal]
                                    [/set_variables]
                                    [set_variables]
                                        name=leader[$i].modifications.trait
                                        mode=append
                                        [insert_tag]
                                            name=literal
                                            variable=temp.trait
                                        [/insert_tag]
                                    [/set_variables]
                                    {FOREACH leader[$i].attack j}
                                        {IF_VAR leader[$i].attack[$j].range equals ranged (
                                            [then]
                                                {VARIABLE_OP leader[$i].attack[$j].damage add 1}
                                            [/then]
                                        )}
                                    {NEXT j}
                                [/case]
                                [case]
                                    value=intelligent
                                    [set_variables]
                                        name=temp
                                        [literal]
                                            {TRAIT_INTELLIGENT}
                                        [/literal]
                                    [/set_variables]
                                    [set_variables]
                                        name=leader[$i].modifications.trait
                                        mode=append
                                        [insert_tag]
                                            name=literal
                                            variable=temp.trait
                                        [/insert_tag]
                                    [/set_variables]
                                    {CLEAR_VARIABLE leader[$i].max_experience}
                                [/case]
                            [/switch]
                        [/do]
                    [/while]
                    [unstore_unit]
                        variable=leader[$i]
                        find_vacant=no
                    [/unstore_unit]
                    {CLEAR_VARIABLE have_ranged,random_traits}
                [/else]
            )}
        {NEXT i}
        {CLEAR_VARIABLE leader,temp}
    [/event]
#enddef
