#textdomain wesnoth-Mystery_Campaign

#define XE_WEAPON_SPECIAL_CURSE
    [curse]
        id=XE curse
        name= _ "curse"
        female_name= _ "female^curse"
        name_inactive= _ "curse"
        female_name_inactive= _ "female^curse"
        description= _ "Curses the hit unit. The cursed unit gets a 20% defense penalty on every terrain until the end of its turn.

But the defense value can't go lower than 20%."
        description_inactive= _ "Curses the hit unit. The cursed unit gets a 20% defense penalty on every terrain until the end of its turn.

But the defense value can't go lower than 20%."
    [/curse]
    #     [resistance]
    #         id=arcane_focus
    #         multiply=-1
    #         apply_to=arcane
    #         #name=_"arcane focus"
    # 		  #name_inactive=_"arcane focus"
    #         #female_name=_"female^arcane focus"
    #         #description=_"Arcane Focus:
    # #Uses the opposite arcane resistance of its target. Causing more damage to mundane things."
    # 		#description_inactive=_"Arcane Focus:
    # #Uses the opposite arcane resistance of its target. Causing more damage to mundane things."
    #         affect_self=no
    #         affect_allies=no
    #         affect_enemies=yes
    #     [/resistance]
[/specials]
[/attack]

# # # # # INFLICT THE CURSE # # # # #
[event]
    id=attacker_curses_unit
    name=attacker hits
    first_time_only=no

    [filter_attack]
        special=XE curse
    [/filter_attack]

    [filter_second]
        [not]
            [filter_wml]
                [status]
                    cursed=yes
                [/status]
            [/filter_wml]
        [/not]
    [/filter_second]

    [switch]
        variable=second_unit.gender
        [case]
            value=male
            [floating_text]
                x,y=$second_unit.x,$second_unit.y
                text="<span color='red'>"+_ "cursed"+"</span>"
            [/floating_text]
        [/case]
        [else]
            [floating_text]
                x,y=$second_unit.x,$second_unit.y
                text="<span color='red'>"+_ "female^cursed"+"</span>"
            [/floating_text]
        [/else]
    [/switch]

    {XE_MACRO_CURSE second_unit 20 80}
[/event]

[event]
    id=defender_curses_unit
    name=defender hits
    first_time_only=no

    [filter_second_attack]
        special=XE curse
    [/filter_second_attack]

    [filter]
        [not]
            [filter_wml]
                [status]
                    cursed=yes
                [/status]
            [/filter_wml]
        [/not]
    [/filter]

    [switch]
        variable=unit.gender
        [case]
            value=male
            [floating_text]
                x,y=$unit.x,$unit.y
                text="<span color='red'>"+_ "cursed"+"</span>"
            [/floating_text]
        [/case]
        [else]
            [floating_text]
                x,y=$unit.x,$unit.y
                text="<span color='red'>"+_ "female^cursed"+"</span>"
            [/floating_text]
        [/else]
    [/switch]

    {XE_MACRO_CURSE unit 20 80}
[/event]

# # # # # USE OPPOSITE ARCANE RESISTANCE # # # # #
[event]
    name=turn refresh,prerecruit,prerecall
    first_time_only=no

    [store_unit]
        [filter]
            [not]
                [filter_wml]
                    [resistance]
                        arcane_focus="$(200-$this_unit.resistance.arcane)"
                    [/resistance]
                [/filter_wml]
            [/not]
        [/filter]
        variable=give_arcane_focus_res
    [/store_unit]

    {FOREACH give_arcane_focus_res i}
        [set_variable]
            name=give_arcane_focus_res[$i].resistance.arcane_focus
            value="$(200-$give_arcane_focus_res[$i].resistance.arcane)"
        [/set_variable]
        [unstore_unit]
            variable=give_arcane_focus_res[$i]
            find_vacant=no
        [/unstore_unit]
    {NEXT i}
    {CLEAR_VARIABLE give_arcane_focus_res}
[/event]

# # # # # HEAL THE CURSE # # # # #
[event]
    name=turn refresh
    first_time_only=no

    [store_unit]
        [filter]
            side=$side_number
            [filter_wml]
                [status]
                    cursed=yes
                [/status]
            [/filter_wml]
        [/filter]
        variable=to_be_uncursed
    [/store_unit]

    {FOREACH to_be_uncursed i}
        {XE_MACRO_UNCURSE to_be_uncursed[$i]}
    {NEXT i}
    {CLEAR_VARIABLE to_be_uncursed}
[/event]

[event]
    name=post advance
    first_time_only=no

    [filter]
        [filter_wml]
            [status]
                cursed=yes
            [/status]
        [/filter_wml]
    [/filter]

    {XE_MACRO_UNCURSE unit}
[/event]

[event]
    name=victory,defeat
    first_time_only=no

    [store_unit]
        [filter]
            [filter_wml]
                [status]
                    cursed=yes
                [/status]
            [/filter_wml]
        [/filter]
        variable=to_be_uncursed
    [/store_unit]

    {FOREACH to_be_uncursed i}
        {XE_MACRO_UNCURSE to_be_uncursed[$i]}
    {NEXT i}
    {CLEAR_VARIABLE to_be_uncursed}
[/event]

[event]
    name=preload
    first_time_only=no
    [lua]
        code=<<
            local _ = wesnoth.textdomain "wesnoth-Mystery_Campaign"
            local old_unit_status = wesnoth.theme_items.unit_status
            function wesnoth.theme_items.unit_status()
                local u = wesnoth.get_displayed_unit()
                if not u then return {} end
                local s = old_unit_status()
                if u.status.cursed then
                    table.insert(s, { "element", {
                        image = "misc/zoc.png",
                        tooltip = _"cursed: This unit is cursed. It gets a 20% defense penalty on every terrain."
                    } })
                end
                return s
            end
        >>
    [/lua]
[/event]
[+attack]
    [+specials]
#enddef

#define XE_MACRO_DECREASE_DEFENSE UNIT TERRAIN AMOUNT MAX_DEF
    [if]
        {VARIABLE_CONDITIONAL {UNIT}.defense.{TERRAIN} less_than 0}
        [then]
            {VARIABLE_OP {UNIT}.defense.{TERRAIN} multiply -1}
        [/then]
    [/if]

    # apply curse
    [if]
        {VARIABLE_CONDITIONAL {UNIT}.defense.{TERRAIN} not_equals $empty_var}
        [then]
            [if]
                {VARIABLE_CONDITIONAL {UNIT}.defense.{TERRAIN} less_than $limit_for_addition}
                [then]
                    {VARIABLE_OP {UNIT}.defense.{TERRAIN} add {AMOUNT}}
                [/then]
                [else]
                    [if]
                        {VARIABLE_CONDITIONAL {UNIT}.defense.{TERRAIN} less_than {MAX_DEF}}
                        [then]
                            {VARIABLE {UNIT}.defense.{TERRAIN} {MAX_DEF}}
                        [/then]
                    [/if]
                [/else]
            [/if]
        [/then]
    [/if]
#enddef

#define XE_MACRO_CURSE UNIT AMOUNT MAX_DEF
    # store original defense
    [set_variables]
        name={UNIT}.variables.original_defense
        to_variable={UNIT}.defense
    [/set_variables]

    {VARIABLE limit_for_addition {MAX_DEF}}
    {VARIABLE_OP limit_for_addition sub {AMOUNT}}

    # Will decrease the defense of a given unit to a given amount, on all terrains and to a minimum of (100-MAX_DEF)%
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) deep_water ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) shallow_water ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) reef ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) swamp_water ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) flat ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) sand ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) forest ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) hills ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) mountains ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) village ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) castle ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) cave ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) frozen ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) unwalkable ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) impassable ({AMOUNT}) {MAX_DEF}}
    {XE_MACRO_DECREASE_DEFENSE ({UNIT}) fungus ({AMOUNT}) {MAX_DEF}}

    {VARIABLE {UNIT}.status.cursed yes}

    [unstore_unit]
        variable={UNIT}
        find_vacant=no
    [/unstore_unit]
    {CLEAR_VARIABLE limit_for_addition}
#enddef

#define XE_MACRO_UNCURSE UNIT
    # Gets the defense of a given unit back to before it was cursed
    [set_variables]
        name={UNIT}.defense
        to_variable={UNIT}.variables.original_defense
    [/set_variables]

    [clear_variable]
        name={UNIT}.status.cursed,{UNIT}.variables.original_defense
    [/clear_variable]

    [unstore_unit]
        variable={UNIT}
        find_vacant=no
    [/unstore_unit]
#enddef
