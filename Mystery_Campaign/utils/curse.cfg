#textdomain wesnoth-Mystery_Campaign

#define WEAPON_SPECIAL_CURSE
    [curse]
        id=weapon_special_curse
        name= _ "curse"
        female_name= _ "female^curse"
        name_inactive= _ "curse"
        female_name_inactive= _ "female^curse"
        description= _ "Curse:
Curses the hit unit. The cursed unit gets a 20% defense penalty on every terrain until the end of its turn.

But the defense value can't go lower than 20%."
        description_inactive= _ "Curse:
Curses the hit unit. The cursed unit gets a 20% defense penalty on every terrain until the end of its turn.

But the defense value can't go lower than 20%."
    [/curse]
    #     [resistance]
    #         id=arcane_focus
    #         multiply=-1
    #         apply_to=arcane
    #         #name=_"arcane focus"
    # 		  #name_inactive=_"arcane focus"
    #         #female_name=_"female^arcane focus"
    #         #description=_"Arcane Focus:
    # #Uses the opposite arcane resistance of its target. Causing more damage to mundane things."
    # 		#description_inactive=_"Arcane Focus:
    # #Uses the opposite arcane resistance of its target. Causing more damage to mundane things."
    #         affect_self=no
    #         affect_allies=no
    #         affect_enemies=yes
    #     [/resistance]
[/specials]
[/attack]

# # # # # INFLICT THE CURSE # # # # #
[event]
    name=attacker hits
    first_time_only=no

    [filter_attack]
        special=weapon_special_curse
    [/filter_attack]

    [filter_second]
        [not]
            [filter_wml]
                [status]
                    cursed=yes
                [/status]
            [/filter_wml]
        [/not]
    [/filter_second]

    [switch]
        variable=second_unit.gender
        [case]
            value=male
            [floating_text]
                x,y=$second_unit.x,$second_unit.y
                text="<span color='red'>"+_ "cursed"+"</span>"
            [/floating_text]
        [/case]
        [else]
            [floating_text]
                x,y=$second_unit.x,$second_unit.y
                text="<span color='red'>"+_ "female^cursed"+"</span>"
            [/floating_text]
        [/else]
    [/switch]

    {MACRO_CURSE second_unit 20 80}
[/event]

[event]
    name=defender hits
    first_time_only=no

    [filter_second_attack]
        special=weapon_special_curse
    [/filter_second_attack]

    [filter]
        [not]
            [filter_wml]
                [status]
                    cursed=yes
                [/status]
            [/filter_wml]
        [/not]
    [/filter]

    [switch]
        variable=unit.gender
        [case]
            value=male
            [floating_text]
                x,y=$unit.x,$unit.y
                text="<span color='red'>"+_ "cursed"+"</span>"
            [/floating_text]
        [/case]
        [else]
            [floating_text]
                x,y=$unit.x,$unit.y
                text="<span color='red'>"+_ "female^cursed"+"</span>"
            [/floating_text]
        [/else]
    [/switch]

    {MACRO_CURSE unit 20 80}
[/event]

# # # # # USE OPPOSITE ARCANE RESISTANCE # # # # #
[event]
    name=turn refresh,prerecruit,prerecall
    first_time_only=no

    [store_unit]
        [filter]
            [not]
                [filter_wml]
                    [resistance]
                        arcane_focus=$this_unit.variables.has_arcane_focus_res
                    [/resistance]
                [/filter_wml]
            [/not]
        [/filter]
        variable=give_arcane_focus_res
    [/store_unit]

    {FOREACH give_arcane_focus_res i}
        [set_variable]
            name=give_arcane_focus_res[$i].resistance.arcane_focus
            value="$(200-$give_arcane_focus_res[$i].resistance.arcane)"
        [/set_variable]
        [set_variable]
            name=give_arcane_focus_res[$i].variables.has_arcane_focus_res
            value=$give_arcane_focus_res[$i].resistance.arcane_focus
        [/set_variable]
        [unstore_unit]
            variable=give_arcane_focus_res[$i]
            find_vacant=no
        [/unstore_unit]
    {NEXT i}
    {CLEAR_VARIABLE give_arcane_focus_res}
[/event]

# # # # # HEAL THE CURSE # # # # #
[event]
    name=side turn end
    first_time_only=no

    [store_unit]
        [filter]
            side=$side_number
            [filter_wml]
                [status]
                    cursed=yes
                [/status]
            [/filter_wml]
        [/filter]
        variable=to_be_uncursed
    [/store_unit]

    {FOREACH to_be_uncursed i}
        {MACRO_UNCURSE to_be_uncursed[$i]}
    {NEXT i}
    {CLEAR_VARIABLE to_be_uncursed}
[/event]

[event]
    name=post advance
    first_time_only=no

    [filter]
        [filter_wml]
            [status]
                cursed=yes
            [/status]
        [/filter_wml]
    [/filter]

    {MACRO_UNCURSE unit}
[/event]

[event]
    name=victory,defeat
    first_time_only=no

    [store_unit]
        [filter]
            [filter_wml]
                [status]
                    cursed=yes
                [/status]
            [/filter_wml]
        [/filter]
        variable=to_be_uncursed
    [/store_unit]

    {FOREACH to_be_uncursed i}
        {MACRO_UNCURSE to_be_uncursed[$i]}
    {NEXT i}
    {CLEAR_VARIABLE to_be_uncursed}
[/event]

[event]
    name=preload
    first_time_only=no
    [lua]
        code=<<
            local _ = wesnoth.textdomain "wesnoth-Mystery_Campaign"
            local old_unit_status = wesnoth.theme_items.unit_status
            function wesnoth.theme_items.unit_status()
                local u = wesnoth.get_displayed_unit()
                if not u then return {} end
                local s = old_unit_status()
                if u.status.cursed then
                    table.insert(s, { "element", {
                        image = "misc/zoc.png",
                        tooltip = _"cursed: This unit is cursed. It gets a 20% defense penalty on every terrain."
                    } })
                end
                return s
            end
        >>
    [/lua]
[/event]

[+attack]
    [+specials]
#enddef

#define MACRO_OBJECT_DECREASE_DEFENSE UNIT TERRAIN AMOUNT
    # macro that will increase the WML defense value of a given unit on a given terrain
    # a defense of 100 in the unit definition means a defense of 0% in game, and vice versa
    [object]
        silent=yes
        [filter]
            id=${UNIT}.id
        [/filter]
        [effect]
            apply_to=defense
            replace=no
            [defense]
                {TERRAIN}={AMOUNT}
            [/defense]
        [/effect]
    [/object]
#enddef

#define MACRO_OBJECT_REPLACE_DEFENSE UNIT TERRAIN AMOUNT
    # macro that will replace the WML defense value of a given unit on a given terrain
    # a defense of 100 in the unit definition means a defense of 0% in game, and vice versa
    [object]
        silent=yes
        [filter]
            id=${UNIT}.id
        [/filter]
        [effect]
            apply_to=defense
            replace=yes
            [defense]
                {TERRAIN}={AMOUNT}
            [/defense]
        [/effect]
    [/object]
#enddef

#define MACRO_MEMO_DEFENSE UNIT TERRAIN
    [store_unit]
        [filter]
            id=${UNIT}.id
        [/filter]
        variable=unit_memo_def
    [/store_unit]

    [if]
        [variable]
            name={UNIT}.defense.{TERRAIN}
            equals=$null
        [/variable]
        [then]
            # Missing defense is 0% in the engine
            [set_variable]
                name=unit_memo_def.variables.memo_def.{TERRAIN}
                value=100
            [/set_variable]
        [/then]
        [else]
            [set_variable]
                name=unit_memo_def.variables.memo_def.{TERRAIN}
                value=${UNIT}.defense.{TERRAIN}
            [/set_variable]
        [/else]
    [/if]

    [unstore_unit]
        variable=unit_memo_def
        find_vacant=no
    [/unstore_unit]
    {CLEAR_VARIABLE unit_memo_def}
#enddef

#define MACRO_DECREASE_DEFENSE UNIT TERRAIN AMOUNT MAX_DEF
    # it is necessary each time to check if the defense becomes greater than 100 or the game may crash
    [set_variable]
        name=limit_for_addition
        value={MAX_DEF}
    [/set_variable]
    [set_variable]
        name=limit_for_addition
        add=-{AMOUNT}
    [/set_variable]

    {MACRO_MEMO_DEFENSE ({UNIT}) ({TERRAIN})}

    [if]
        [variable]
            name={UNIT}.defense.{TERRAIN}
            less_than=$limit_for_addition
        [/variable]
        [then]
            [if]
                [variable]
                    name={UNIT}.defense.{TERRAIN}
                    less_than=0
                [/variable]
                [then]
                    # feral and mounted units have negative defenses
                    {MACRO_OBJECT_DECREASE_DEFENSE ({UNIT}) ({TERRAIN}) (-{AMOUNT})}
                [/then]
                [else]
                    {MACRO_OBJECT_DECREASE_DEFENSE ({UNIT}) ({TERRAIN}) ({AMOUNT})}
                [/else]
            [/if]
        [/then]
        [else]
            {MACRO_OBJECT_REPLACE_DEFENSE ({UNIT}) ({TERRAIN}) ({MAX_DEF})}
        [/else]
    [/if]
    {CLEAR_VARIABLE limit_for_addition}
#enddef

#define MACRO_CURSE UNIT AMOUNT MAX_DEF
    # Will decrease the defense of a given unit to a given amount,
    # on all terrains and to a minimum of (100-MAX_DEF)%
    {MACRO_DECREASE_DEFENSE ({UNIT}) deep_water ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) shallow_water ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) reef ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) swamp_water ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) flat ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) sand ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) forest ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) hills ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) mountains ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) village ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) castle ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) cave ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) frozen ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) unwalkable ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) impassable ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) fungus ({AMOUNT}) {MAX_DEF}}

    [object]
        silent=yes
        [filter]
            id=${UNIT}.id
        [/filter]
        [effect]
            apply_to=status
            add=cursed
        [/effect]
    [/object]
#enddef

#define MACRO_UNCURSE UNIT
    # Gets the defense of a given unit back to before it was cursed
    [set_variable]
        name={UNIT}.defense.deep_water
        value=${UNIT}.variables.memo_def.deep_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.shallow_water
        value=${UNIT}.variables.memo_def.shallow_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.reef
        value=${UNIT}.variables.memo_def.reef
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.swamp_water
        value=${UNIT}.variables.memo_def.swamp_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.flat
        value=${UNIT}.variables.memo_def.flat
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.sand
        value=${UNIT}.variables.memo_def.sand
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.forest
        value=${UNIT}.variables.memo_def.forest
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.hills
        value=${UNIT}.variables.memo_def.hills
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.mountains
        value=${UNIT}.variables.memo_def.mountains
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.village
        value=${UNIT}.variables.memo_def.village
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.castle
        value=${UNIT}.variables.memo_def.castle
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.cave
        value=${UNIT}.variables.memo_def.cave
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.frozen
        value=${UNIT}.variables.memo_def.frozen
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.unwalkable
        value=${UNIT}.variables.memo_def.unwalkable
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.impassable
        value=${UNIT}.variables.memo_def.impassable
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.fungus
        value=${UNIT}.variables.memo_def.fungus
    [/set_variable]

    [unstore_unit]
        variable={UNIT}
        find_vacant=no
    [/unstore_unit]

    [object]
        silent=yes
        [filter]
            id=${UNIT}.id
        [/filter]
        [effect]
            apply_to=status
            remove=cursed
        [/effect]
    [/object]
#enddef
