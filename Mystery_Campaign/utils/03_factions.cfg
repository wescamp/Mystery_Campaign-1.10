#textdomain wesnoth-Mystery_Campaign
### macros used to define factions

# wmlindent: start ignoring
#define INIT_FACTION ID NAME
    [event]
        name=start

        ## set side 1's faction in first scenario only
		{IF_VAR scenario_number equals 1 (
            [then]
                {VARIABLE side 1}
                {VARIABLE side_1_faction $player_faction}
            [/then]
            [else]
                {VARIABLE side 2}
            [/else]
        )}

        ## loop through all the sides
        [while]
            [variable]
                name=side
                less_than=3
            [/variable]
            [do]
                ## only do anything if faction is {NAME}
                {VARIABLE_OP faction to_variable side_$side|_faction}
                [if]
                    [variable]
                        name=faction
                        equals={ID}
                    [/variable]
                    [then]

						{IF_VAR side equals 2 (
							[then]
								{VARIABLE tfaction {NAME}}
							[/then]
						)}

                        ## get starting location
                        [store_starting_location]
                            side=$side
                        [/store_starting_location]

                        ## clear the recruit list
                        [set_recruit]
                            side=$side
                            recruit=
                        [/set_recruit]

                        #{DEBUG_MSG (Side $side is the $tfaction|.)}
#enddef

#define ALLOW_RECRUIT TYPE DESCRIPTION
						[allow_recruit]
							side=$side
							type={TYPE}
						[/allow_recruit]
						{VARIABLE xrecruits $recruits}
						{IF_VAR xrecruits equals $null (
							[then]
								{VARIABLE recruits ({DESCRIPTION})}
							[/then]
							[else]
								{VARIABLE_OP recruits value ("$recruits|, {DESCRIPTION}")}
							[/else]
						)}
#enddef

#define ALLOW_EXTRA_RECRUIT CHANCE TYPE DESCRIPTION
						[unit]
							side=$side
							to_variable=dummy
							type={TYPE}
						[/unit]

						[store_gold]
							side=$side
						[/store_gold]

						{VARIABLE cost "$($dummy.cost|*5*$dummy.level)"}

						{VARIABLE_OP gold sub $cost}
						[if]
							[and]
								[variable]
									name=gold
									greater_than=$cost
								[/variable]
								[variable]
									name=side
									not_equals=1
								[/variable]
							[/and]
							[then]
								#{DEBUG_MSG ($gold gold </> $cost cost)}
								{RANDOM 0..99}
								{IF_VAR random less_than {CHANCE} (
									[then]
										#{DEBUG_MSG (side $side can now recruit {DESCRIPTION})}
										{ALLOW_RECRUIT {TYPE} {DESCRIPTION}}
									[/then]
								)}
								{CLEAR_VARIABLE random}
							[/then]
						[/if]
						{CLEAR_VARIABLE cost,gold,dummy}
#enddef

#define ALLOW_RECRUIT_PLAYER TYPE DESCRIPTION
						{IF_VAR side equals 1 (
							[then]
								{ALLOW_RECRUIT {TYPE} {DESCRIPTION}}
							[/then]
						)}
#enddef

#define FACTION_PLAYER_LEADER TYPE
						[if]
							[variable]
								name=side
								equals=1
							[/variable]
							[not]
								[have_unit]
									side=$side
								[/have_unit]
							[/not]
							[then]
								[unit]
									side=$side
									canrecruit=yes
									type={TYPE}
									x,y=$location.x,$location.y
									generate_name=yes
									random_traits=no
								[/unit]
							[/then]
						[/if]
#enddef

#define FACTION_RANDOM_LEADER LEADER1 LEADER2
						[if]
							[not]
								[have_unit]
									side=$side
								[/have_unit]
							[/not]
							[then]
								{IF_VAR scenario_number less_than 4 (
									[then]
										{VARIABLE_OP leader rand({LEADER1})}
									[/then]
									[else]
										{IF_VAR scenario_number less_than 10 (
											[then]
												{VARIABLE_OP leader rand({LEADER1},{LEADER2})}
											[/then]
											[else]
												{VARIABLE_OP leader rand({LEADER2})}
											[/else]
										)}
									[/else]
								)}

								[unit]
									side=$side
									canrecruit=yes
									type=$leader
									x,y=$location.x,$location.y
									generate_name=yes
									random_traits=no
								[/unit]
 								#{DEBUG_MSG (Leader of $side is a $leader)}
								{CLEAR_VARIABLE leader}
							[/then]
						[/if]
#enddef

#define END
						{VARIABLE_OP side_$side|_recruits to_variable recruits}
 						#{DEBUG_MSG (side=$side recruits=$recruits)}
					[/then]
				[/if]
				{VARIABLE_OP side add 1}
			[/do]
		[/while]
		{CLEAR_VARIABLE side,location,faction,recruits,xrecruits}
	[/event]
#enddef
# wmlindent: stop ignoring
