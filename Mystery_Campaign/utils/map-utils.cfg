#textdomain wesnoth-Mystery_Campaign

#define CONVERT_TO_GREAT_TREE TERRAIN
    [event]
        name=prestart

        [store_locations]
            terrain=*^F*
            [filter_adjacent_location]
                terrain=*^F*
                count=6
            [/filter_adjacent_location]
            variable=loc
        [/store_locations]

        {FOREACH loc i_temp}
            [terrain]
                terrain={TERRAIN}
                x,y=$loc[$i_temp].x,$loc[$i_temp].y
                [not]
                    [filter_adjacent_location]
                        terrain={TERRAIN}
                        count=1-6
                    [/filter_adjacent_location]
                [/not]
            [/terrain]
        {NEXT i_temp}
        {CLEAR_VARIABLE loc}
    [/event]
#enddef

#define SCATTER_CASTLES
    [event]
        name=prestart

        [store_map_dimensions]
            variable=map
        [/store_map_dimensions]

        {VARIABLE_OP random_number_of_castles rand(2..6)}

        {REPEAT $random_number_of_castles (
            [store_locations]
                #{EVERYWHERE}
                x,y="2-$($map.width-1),2-$($map.heigth-1)"
                [not]
                    terrain="K*"
                    radius=9
                [/not]
                [not]
                    terrain=Wo*,Xu*
                [/not]
                variable=possible_locs
            [/store_locations]

            {VARIABLE_OP random_loc rand(1..$possible_locs.length)}
            {VARIABLE_OP random_loc sub 1}
            {LOOKUP_INDEX castle_loc x $possible_locs[$random_loc].x index}
            #[inspect][/inspect]
            [while]
                {VARIABLE_CONDITIONAL index less_than $castle_loc.length}
                {VARIABLE_CONDITIONAL possible_locs[$random_loc].x equals $castle_loc[$index].x}
                {VARIABLE_CONDITIONAL possible_locs.length greater_than 0}
                [do]
                    {VARIABLE_OP random_loc rand(1..$possible_locs.length)}
                    {VARIABLE_OP random_loc sub 1}
                    {CLEAR_VARIABLE index}
                    {LOOKUP_INDEX castle_loc x $possible_locs[$random_loc].x index}
                [/do]
            [/while]

            {VARIABLE castle_loc[$REPEAT_i].x $possible_locs[$random_loc].x}
            {VARIABLE castle_loc[$REPEAT_i].y $possible_locs[$random_loc].y}
            [terrain]
                terrain=Kh
                x,y=$possible_locs[$random_loc].x,$possible_locs[$random_loc].y
            [/terrain]

            [store_locations]
                [filter_adjacent_location]
                    x,y=$possible_locs[$random_loc].x,$possible_locs[$random_loc].y
                [/filter_adjacent_location]
                variable=for_castle
            [/store_locations]

            {VARIABLE_OP how_many rand(1..3)}
            [while]
                [variable]
                    name=REPEAT_j
                    less_than=$how_many
                [/variable]
                [variable]
                    name=converted
                    less_than=$for_castle.length
                [/variable]
                [do]
                    {VARIABLE_OP random_castles rand(1..$for_castle.length)}
                    {VARIABLE_OP random_castles sub 1}

                    {IF_VAR for_castle[$random_castles].terrain contains ("V") (
                        [else]
                            [terrain]
                                terrain=Ch
                                x,y=$for_castle[$random_castles].x,$for_castle[$random_castles].y
                            [/terrain]
                            {VARIABLE_OP converted add 1}
                        [/else]
                    )}
                    {VARIABLE_OP REPEAT_j add 1}
                [/do]
            [/while]
            {CLEAR_VARIABLE (random_castles,random_loc,for_castle,index,random,possible_locs,REPEAT_j,how_many,converted)}
        )}
        {CLEAR_VARIABLE (castle_loc,player,enemy,random_number_of_castles,map)}
    [/event]
#enddef

#define CONVERT_CASTLE A
    [event]
        name=prestart

        [store_locations]
            terrain=Kh
            variable=keeps
        [/store_locations]

        {FOREACH keeps i}
            [store_locations]
                terrain=Ch
                [and]
                    x,y=$keeps[$i].x,$keeps[$i].y
                    radius={INFINITY}
                    [filter_radius]
                        terrain=Ch
                    [/filter_radius]
                [/and]
                variable=castle
            [/store_locations]

            {VARIABLE_OP type rand({A})}
            [terrain]
                x,y=$keeps[$i].x,$keeps[$i].y
                terrain=K$type
            [/terrain]

            {FOREACH castle j}
                [terrain]
                    x,y=$castle[$j].x,$castle[$j].y
                    terrain=C$type
                [/terrain]
            {NEXT j}

            {CLEAR_VARIABLE castle,type}
        {NEXT i}
        {CLEAR_VARIABLE keeps}
    [/event]
#enddef

#define MP_SCENARIO ID GREAT_TREE CASTLE_TYPE
    [generator]
        name=default
        {MAP_GENERATOR_{ID}}
    [/generator]
    {CONVERT_TO_GREAT_TREE {GREAT_TREE}}
    {SCATTER_CASTLES}
    {CONVERT_CASTLE {CASTLE_TYPE}}
#enddef

#define MC_MULTIPLAYER_SCENARIO ID EVENTS
    [multiplayer]
        id={ID}
        name="Random Map {ID}"
        map_generation=default
        [generator]
            [scenario]
                id={ID}
                turns=-1
                {DEFAULT_MUSIC_PLAYLIST}
                {DEFAULT_SCHEDULE}
                {EVENTS}
            [/scenario]
            name=default
            {MAP_GENERATOR_{ID}}
        [/generator]
    [/multiplayer]
#enddef

#define HEIGHT ALTITUDE TERRAIN
    [height]
        height={ALTITUDE}
        terrain={TERRAIN}
    [/height]
#enddef

#define MC_ROAD_COST TERRAIN COST NEW_TERRAIN
    [road_cost]
        terrain={TERRAIN}
        cost={COST}
        convert_to={NEW_TERRAIN}
    [/road_cost]
#enddef

#define MC_ROAD_COST_BRIDGE TERRAIN COST BRIDGE ALT
    [road_cost]
        terrain={TERRAIN}
        cost={COST}
        convert_to_bridge={BRIDGE}
        convert_to={ALT}
    [/road_cost]
#enddef

#define VILLAGE TERRAIN TYPE RATING LIKED_TERRAINLIST
    # Syntax shortcut
    [village]
        terrain={TERRAIN}
        convert_to={TYPE}
        rating={RATING}
        adjacent_liked={LIKED_TERRAINLIST}
    [/village]
#enddef

#define CONVERT MINHEIGHT MAXHEIGHT MINTEMP MAXTEMP TERRAINLIST NEW_TERRAIN
    # Convert terrains to a terrain within the specified height and temp ranges.
    [convert]
        min_height={MINHEIGHT}
        max_height={MAXHEIGHT}
        min_temperature={MINTEMP}
        max_temperature={MAXTEMP}
        from={TERRAINLIST}
        to={NEW_TERRAIN}
    [/convert]
#enddef

#define MIN_COST_ROAD X
    [road_cost]
        terrain={X}
        cost=1
        convert_to={X}
    [/road_cost]
#enddef

#define NOT_CASTLE
    [not]
        terrain=K*,C*
    [/not]
#enddef
