#textdomain wesnoth-Mystery_Campaign

#define AI_SIDE
    {AI_NO_SCOUTS}

    {AI_SIMPLE_ALWAYS_ASPECT village_value 0.0}
    {AI_SIMPLE_ALWAYS_ASPECT support_villages yes}

    {AI_SIMPLE_ALWAYS_ASPECT aggression 0.9}
    {AI_SIMPLE_ALWAYS_ASPECT caution 0.3}
    {AI_SIMPLE_ALWAYS_ASPECT recruitment_pattern ""}

    # units with petrify should always attack the strongest target
    {MODIFY_AI_ADD_CANDIDATE_ACTION 2 main_loop (
        [candidate_action]
            engine=fai
            id=petrify_attack
            name=petrify_attack
            type=attack
            [filter]
                me="filter( input, 'me', filter(me.attacks,'att',filter(att.special,'spe',contains_string(spe,'petrifies'))))"
            [/filter]
            evaluation="{AI_CA_COMBAT_SCORE}+500+unit_worth
				where unit_worth = target.hitpoints*target.level+max_possible_damage(target,my_leader)"
            action="attack(me.loc,choose(filter(map(filter(my_moves.moves, src=me.loc),dst),distance_between(self,target.loc) = 1), defense_on(me,self)),target.loc,att_weap)
				where att_weap = index_of(['petrifies'],map(me.attacks,special))"
        [/candidate_action]
    )}

    # units with petrify should be heavily targeted
    {MODIFY_AI_ADD_CANDIDATE_ACTION 2 main_loop (
        [candidate_action]
            engine=fai
            id=defend_against_petrify
            name=defend_against_petrify
            type=attack
            [filter]
                target="filter( input, 'target', filter(target.attacks,'att',filter(att.special,'spe',contains_string(spe,'petrifies'))))"
            [/filter]
            evaluation="{AI_CA_COMBAT_SCORE}+100+my_worth
				where my_worth = max_possible_damage(me,target)*me.level+my_leader.hitpoints-me.hitpoints"
            action="attack(me.loc,choose(filter(map(filter(my_moves.moves, src=me.loc),dst),distance_between(self,target.loc) = 1), defense_on(me,self)),target.loc,-1)"
        [/candidate_action]
    )}

    # units with curse
    {MODIFY_AI_ADD_CANDIDATE_ACTION 2 main_loop (
        [candidate_action]
            id=curse_attack
            engine=fai
            name=curse_attack
            type=attack
            [filter]
                me="filter( input, 'me', me.leader=0 and filter(me.attacks,'att',filter(att.special,'spe',contains_string(spe,'XE curse')) and me.hitpoints > me.max_hitpoints/3))"
                target="filter( input, 'target', index_of('cursed',keys(target.states)) = -1 and filter(units,type='XE Cockatrice') = -1)"
            [/filter]
            evaluation="{~add-ons/Mystery_Campaign/utils/curse_attack.fai}"
            action="attack(me.loc,choose(filter(map(filter(my_moves.moves,src=me.loc),dst),distance_between(self,target.loc) = 1),defense_on(me, self)),target.loc,att_weap)
				where att_weap = index_of(['curse'],map(me.attacks,special))"
        [/candidate_action]
    )}

    # if wounded go for a near village
    {MODIFY_AI_ADD_CANDIDATE_ACTION 2 main_loop (
        [candidate_action]
            id=passive_leader_heals
            name=passive_leader_heals
            engine=fai
            type=movement
            [filter]
                me="filter(input, 'me', me.leader=1)"
            [/filter]
            evaluation="if(me.hitpoints < me.max_hitpoints and size( filter(unit_moves(me.loc),is_village(map,x,y) ) ) > 0,{AI_CA_COMBAT_SCORE}+8999,0)"
            action="move(me.loc,find(unit_moves(me.loc),is_village(map,x,y)))"
        [/candidate_action]
    )}

    # only attack if have a CTK > 40%
    {MODIFY_AI_ADD_CANDIDATE_ACTION 2 main_loop (
        [candidate_action]
            id=passive_leader_attacks
            name=passive_leader_attacks
            engine=fai
            type=attack
            [filter]
                me="filter(input, 'me', me.leader=1)"
                target="filter(input, 'target', target.level != 0)"
            [/filter]
            evaluation="if(battle_outcome[1].hitpoints_left[0] = 0 and battle_outcome[0].hitpoints_left[0] > 0 and battle_outcome[1].probability[0] > 4000,{AI_CA_COMBAT_SCORE}+battle_outcome[1].probability[0],0)
				where battle_outcome = calculate_outcome(me.loc,choose(filter(map(filter(my_moves.moves,src=me.loc),dst),distance_between(self,target.loc) = 1),defense_on(me, self)),target.loc)"
            action="attack(me.loc,choose(filter(map(filter(my_moves.moves,src=me.loc),dst),distance_between(self,target.loc) = 1),defense_on(me, self)),target.loc)"
        [/candidate_action]
    )}

    # prevent the ai leader rushing out
    {MODIFY_AI_ADD_CANDIDATE_ACTION 2 main_loop (
        [candidate_action]
            id=passive_leader_idle
            name=passive_leader_idle
            engine=fai
            type=movement
            [filter]
                me="filter(input, 'me', me.leader=1)"
            [/filter]
            evaluation="{AI_CA_COMBAT_SCORE}+10"
            action="move(me.loc,me.loc)"
        [/candidate_action]
    )}
#enddef
