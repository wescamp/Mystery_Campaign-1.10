#textdomain wesnoth-Mystery_Campaign

#define DEBUG MSG
#ifdef DEBUG_MODE
    [chat]
        message={MSG}
    [/chat]
#endif
#enddef

#define	ALLY
    [switch]
        variable=global.funding_mode
        [case]
            value="Moderate"
            [set_variable]
                name=chance
                {QUANTITY value 20 10 5}
            [/set_variable]
        [/case]
        [case]
            value="Excessive"
            [set_variable]
                name=chance
                {QUANTITY value 10 5 0}
            [/set_variable]
        [/case]
        [else]
            [set_variable]
                name=chance
                {QUANTITY value 0 10 10}
            [/set_variable]
        [/else]
    [/switch]

    [if]
        {VARIABLE_CONDITIONAL scenario_number greater_than 3}
        [and]
            {VARIABLE_CONDITIONAL side_3.ally equals no}
        [/and]
        [then]
            {RANDOM (0..99)}
            {IF_VAR random less_than $chance (
                [then]
                    {VARIABLE side_3.ally yes}

                    {VARIABLE sides 1}
                    [while]
                        [variable]
                            name=sides
                            less_than=3
                        [/variable]
                        [do]
                            [store_starting_location]
                                side=$sides
                                variable=loc$sides
                            [/store_starting_location]
                            {VARIABLE_OP sides add 1}
                        [/do]
                    [/while]
                    {CLEAR_VARIABLE sides}

                    [store_map_dimensions]
                        variable=map
                    [/store_map_dimensions]
                    #{DEBUG (map width is $map.width and heigth is $map.heigth)}

                    [store_locations]
                        variable=possible_locs
                        x,y="2-$($map.width-1),2-($map.heigth-1)"
                        [not]
                            x,y=$loc1.x,$loc1.y
                            radius=8
                        [/not]
                        [not]
                            x,y=$loc2.x,$loc2.y
                            radius=16
                        [/not]
                        [not]
                            terrain=Qx*,W*,Q*,X*,Xu,Xuc
                        [/not]
                    [/store_locations]

                    #{DEBUG (number of possible locs $possible_locs.length)}
                    {VARIABLE_OP where rand(0.."$($possible_locs.length-1)")}
                    #{DEBUG (keep loc is at $possible_locs[$where].x,$possible_locs[$where].y)}
                    [terrain]
                        x,y=$possible_locs[$where].x,$possible_locs[$where].y
                        terrain=Kh
                    [/terrain]
                    [store_locations]
                        variable=castle
                        [filter_adjacent_location]
                            x,y=$possible_locs[$where].x,$possible_locs[$where].y
                        [/filter_adjacent_location]
                    [/store_locations]
                    {FOREACH castle i}
                        [terrain]
                            x,y=$castle[$i].x,$castle[$i].y
                            terrain=Ch
                        [/terrain]
                    {NEXT i}

                    [unstore_unit]
                        variable=side_3.leader[0]
                        x,y=$possible_locs[$where].x,$possible_locs[$where].y
                    [/unstore_unit]

                    {VARIABLE side_3.previous_previous_faction $side_3.previous_faction}
                    {VARIABLE side_3.previous_faction $side_3.faction}

                    {CLEAR_VARIABLE loc1,loc2,possible_locs,where,castle,map}
                [/then]
            )}
            {CLEAR_VARIABLE random}
        [/then]
        [else]
            {VARIABLE side_3.ally no}
        [/else]
    [/if]
    {CLEAR_VARIABLE chance}

    [if]
        {VARIABLE_CONDITIONAL side_3.ally equals no}
        [then]
            [modify_side]
                side=3
                hidden=yes
                controller=null
            [/modify_side]
        [/then]
    [/if]
#enddef

#define SURRENDER SIDE
    [event]
        name=prestart
        {VARIABLE_OP side_{SIDE}.ratio rand(2..4)}
    [/event]

    [event]
        name=side {SIDE} turn end
        first_time_only=no

        [filter_condition]
            {VARIABLE_CONDITIONAL turn_number greater_than_equal_to 3}
        [/filter_condition]

        [store_unit]
            [filter]
                side=$side_number
                {EVERYWHERE}
            [/filter]
            variable=my_units
        [/store_unit]

        [switch]
            variable=side_number
            [case]
                value=2
                [store_unit]
                    [filter]
                        [not]
                            side=$side_number
                        [/not]
                        {EVERYWHERE}
                    [/filter]
                    variable=enemy_units
                [/store_unit]
            [/case]
            [case]
                value=3
                [store_unit]
                    [filter]
                        [not]
                            side=$side_number
                        [/not]
                        [not]
                            side=1
                        [/not]
                        {EVERYWHERE}
                    [/filter]
                    variable=enemy_units
                [/store_unit]
            [/case]
        [/switch]

        [while]
            {VARIABLE_CONDITIONAL i less_than $my_units.length}
            [do]
                [unit_worth]
                    id="$my_units[$i].id"
                [/unit_worth]
                {VARIABLE_OP side_$side_number|_worth add $unit_worth}
                {VARIABLE_OP i add 1}
            [/do]
        [/while]
        {CLEAR_VARIABLE (my_units,i)}

        [while]
            {VARIABLE_CONDITIONAL i less_than $enemy_units.length}
            [do]
                [unit_worth]
                    id="$enemy_units[$i].id"
                [/unit_worth]
                {VARIABLE_OP enemy_of_$side_number|_worth add $unit_worth}
                {VARIABLE_OP i add 1}
            [/do]
        [/while]
        {CLEAR_VARIABLE (enemy_units,i)}

        #{DEBUG ("side 1 worth: $enemy_of_$side_number|_worth")}
        #{DEBUG ("side 2 worth: $side_$side_number|_worth")}

        [store_gold]
            side={SIDE}
        [/store_gold]
        #[inspect][/inspect]

        [if]
            [variable]
                name=gold
                less_than=$stored_side_{SIDE}.cheapest_unit
            [/variable]
            [and]
                [variable]
                    name=side_{SIDE}.ratio
                    less_than="$($enemy_of_$side_number|_worth/$side_$side_number|_worth)"
                [/variable]
            [/and]
            [then]
                [message]
                    side={SIDE}
                    canrecruit=yes
                    message= _ "Oh, it's hopeless! I surrender!"
                [/message]
                [kill]
                    side={SIDE}
                    canrecruit=yes
                    animate=no
                    fire_event=no
                [/kill]
                {NEXT_SCENARIO}
            [/then]
        [/if]
        {CLEAR_VARIABLE (gold,enemy_of_$side_number|_worth,side_$side_number|_worth,unit_worth,experience,cost,next_cost,health)}
        #[inspect][/inspect]
    [/event]
#enddef

#define NEXT_SCENARIO
    {VARIABLE_OP next rand(spring,cave,fall,summer,isles,winter,desert,swamp)}
    [while]
        [variable]
            name=next
            equals=$global.previous_scenario
        [/variable]
        [or]
            [variable]
                name=next
                equals=$global.previous_previous_scenario
            [/variable]
        [/or]
        [do]
            {VARIABLE_OP next rand(spring,cave,fall,summer,isles,winter,desert,swamp)}
        [/do]
    [/while]
    [endlevel]
        result=victory
        next_scenario=mystery_scenario_$next|
        bonus=no
        carryover_report=yes
        save=no
        replay_save=no
        {NEW_GOLD_CARRYOVER 40}
    [/endlevel]
    {VARIABLE global.previous_previous_scenario $global.previous_scenario}
    {VARIABLE global.previous_scenario $next}
    {CLEAR_VARIABLE next}
#enddef

#define VICTORY_AND_DEFEAT_MUSIC
    [event]
        name=victory
        [music]
            name=silence.ogg
            append=no
            ms_before=0
        [/music]
        [music]
            name=victory2.ogg
            play_once=yes
            immediate=yes
        [/music]
    [/event]
    [event]
        name=defeat
        [music]
            name=silence.ogg
            append=no
            ms_before=0
        [/music]
        [music]
            name=defeat.ogg
            play_once=yes
            immediate=yes
        [/music]
    [/event]
#enddef

#define MC_REPEAT NUMBER BODY_WML
    {VARIABLE REPEAT_i 0}
    [while]
        {VARIABLE_CONDITIONAL REPEAT_i less_than_equal_to {NUMBER}}
        [do]
            {BODY_WML}
            {VARIABLE_OP REPEAT_i add 1}
        [/do]
    [/while]
    {CLEAR_VARIABLE REPEAT_i}
#enddef
